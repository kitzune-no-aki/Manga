{"ast":null,"code":"var _jsxFileName = \"/Users/miriam/IdeaProjects/Manga/frontend/src/components/table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport Navbar from \"./navbar\";\nimport { sortRows, filterRows, paginateRows, Pagination } from \"./helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = _ref => {\n  _s();\n  let {\n    columns,\n    rows\n  } = _ref;\n  const [activePage, setActivePage] = useState(1);\n  const [filters, setFilters] = useState({});\n  const [sort, setSort] = useState({\n    order: 'asc',\n    orderBy: 'id'\n  });\n  const rowsPerPage = 20;\n  const filteredRows = useMemo(() => filterRows(rows, filters), [rows, filters]);\n  const sortedRows = useMemo(() => sortRows(filteredRows, sort), [filteredRows, sort]);\n  const calculatedRows = paginateRows(sortedRows, activePage, rowsPerPage);\n  const count = filteredRows.length;\n  const totalPages = Math.ceil(count / rowsPerPage);\n  const handleSearch = (value, accessor) => {\n    setActivePage(1);\n    if (value) {\n      setFilters(prevFilters => ({\n        ...prevFilters,\n        [accessor]: value\n      }));\n    } else {\n      setFilters(prevFilters => {\n        const updatedFilters = {\n          ...prevFilters\n        };\n        delete updatedFilters[accessor];\n        return updatedFilters;\n      });\n    }\n  };\n  const handleSort = accessor => {\n    setActivePage(1);\n    setSort(prevSort => ({\n      order: prevSort.order === 'asc' && prevSort.orderBy === accessor ? 'desc' : 'asc',\n      orderBy: accessor\n    }));\n  };\n  const clearAll = () => {\n    setSort({\n      order: 'asc',\n      orderBy: 'id'\n    });\n    setActivePage(1);\n    setFilters({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableCO2\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(column => {\n              const sortIcon = () => {\n                if (column.accessor === sort.orderBy) {\n                  if (sort.order === 'asc') {\n                    return '⬆️';\n                  }\n                  return '⬇️';\n                } else {\n                  return '️↕️';\n                }\n              };\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSort(column.accessor),\n                  children: sortIcon()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this)]\n              }, column.accessor, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(column => {\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"search\",\n                  placeholder: `Search ${column.label}`,\n                  value: filters[column.accessor],\n                  onChange: event => handleSearch(event.target.value, column.accessor)\n                }, `${column.accessor}-search`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: calculatedRows.map(row => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: columns.map(column => {\n                if (column.format) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: column.format(row[column.accessor])\n                  }, column.accessor, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 48\n                  }, this);\n                }\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row[column.accessor]\n                }, column.accessor, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 44\n                }, this);\n              })\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: count > 0 ? /*#__PURE__*/_jsxDEV(Pagination, {\n          activePage: activePage,\n          count: count,\n          rowsPerPage: rowsPerPage,\n          totalPages: totalPages,\n          setActivePage: setActivePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearAll,\n            children: \"Clear all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Table, \"JQkghya2ZWWmktzaInn75ICskKc=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useMemo","Navbar","sortRows","filterRows","paginateRows","Pagination","jsxDEV","_jsxDEV","Table","_ref","_s","columns","rows","activePage","setActivePage","filters","setFilters","sort","setSort","order","orderBy","rowsPerPage","filteredRows","sortedRows","calculatedRows","count","length","totalPages","Math","ceil","handleSearch","value","accessor","prevFilters","updatedFilters","handleSort","prevSort","clearAll","children","className","map","column","sortIcon","label","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","event","target","row","format","id","_c","$RefreshReg$"],"sources":["/Users/miriam/IdeaProjects/Manga/frontend/src/components/table.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport Navbar from \"./navbar\";\nimport {sortRows, filterRows, paginateRows, Pagination} from \"./helpers\";\n\nconst Table = ({columns, rows}) => {\n    const [activePage, setActivePage] = useState(1)\n    const [filters, setFilters] = useState({})\n    const [sort, setSort] = useState({ order: 'asc', orderBy: 'id' })\n    const rowsPerPage = 20\n\n    const filteredRows = useMemo(() => filterRows(rows, filters), [rows, filters])\n    const sortedRows = useMemo(() => sortRows(filteredRows, sort), [filteredRows, sort])\n    const calculatedRows = paginateRows(sortedRows, activePage, rowsPerPage)\n\n    const count = filteredRows.length\n    const totalPages = Math.ceil(count / rowsPerPage)\n\n    const handleSearch = (value, accessor) => {\n        setActivePage(1)\n\n        if (value) {\n            setFilters((prevFilters) => ({\n                ...prevFilters,\n                [accessor]: value,\n            }))\n        } else {\n            setFilters((prevFilters) => {\n                const updatedFilters = { ...prevFilters }\n                delete updatedFilters[accessor]\n\n                return updatedFilters\n            })\n        }\n    }\n\n    const handleSort = (accessor) => {\n        setActivePage(1)\n        setSort((prevSort) => ({\n            order: prevSort.order === 'asc' && prevSort.orderBy === accessor ? 'desc' : 'asc',\n            orderBy: accessor,\n        }))\n    }\n\n    const clearAll = () => {\n        setSort({ order: 'asc', orderBy: 'id' })\n        setActivePage(1)\n        setFilters({})\n    }\n\n    return (\n        <div>\n            {/*<BurgerNav></BurgerNav>*/}\n            <div className='tableCO2'>\n                <table>\n                    <thead>\n                    <tr>\n                        {columns.map((column) => {\n                            const sortIcon = () => {\n                                if (column.accessor === sort.orderBy) {\n                                    if (sort.order === 'asc') {\n                                        return '⬆️'\n                                    }\n                                    return '⬇️'\n                                } else {\n                                    return '️↕️'\n                                }\n                            }\n                            return (\n                                <th key={column.accessor}>\n                                    <span>{column.label}</span>\n                                    <button onClick={() => handleSort(column.accessor)}>{sortIcon()}</button>\n                                </th>\n                            )\n                        })}\n                    </tr>\n                    <tr>\n                        {columns.map((column) => {\n                            return (\n                                <th>\n                                    <input\n                                        key={`${column.accessor}-search`}\n                                        type=\"search\"\n                                        placeholder={`Search ${column.label}`}\n                                        value={filters[column.accessor]}\n                                        onChange={(event) => handleSearch(event.target.value, column.accessor)}\n                                    />\n                                </th>\n                            )\n                        })}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {calculatedRows.map((row) => {\n                        return (\n                            <tr key={row.id}>\n                                {columns.map((column) => {\n                                    if (column.format) {\n                                        return <td key={column.accessor}>{column.format(row[column.accessor])}</td>\n                                    }\n                                    return <td key={column.accessor}>{row[column.accessor]}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n\n                <div className='pagination'>\n                    {count > 0 ? (\n                        <Pagination\n                            activePage={activePage}\n                            count={count}\n                            rowsPerPage={rowsPerPage}\n                            totalPages={totalPages}\n                            setActivePage={setActivePage}\n                        />\n                    ) : (\n                        <p>No data found</p>\n                    )}\n                </div>\n\n                <div>\n                    <p>\n                        <button onClick={clearAll}>Clear all</button>\n                    </p>\n                </div>\n            </div>\n            {/*<Footer></Footer>*/}\n        </div>\n    )\n}\n\nexport default Table"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}