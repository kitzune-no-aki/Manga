{"ast":null,"code":"var _jsxFileName = \"/Users/miriam/IdeaProjects/Manga/frontend/src/components/helpers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/* eslint-disable eqeqeq */\n\nexport function isEmpty() {\n  let obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(obj).length === 0;\n}\nexport function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\nexport function isNumber(value) {\n  return typeof value == 'number' && !isNaN(value);\n}\nexport function isBoolean(value) {\n  return value === true || value === false;\n}\nexport function isNil(value) {\n  return typeof value === 'undefined' || value === null;\n}\nexport function isDateString(value) {\n  if (!isString(value)) return false;\n  return value.match(/^\\d{2}-\\d{2}-\\d{4}$/);\n}\nexport function convertDateString(value) {\n  return value.substr(6, 4) + value.substr(3, 2) + value.substr(0, 2);\n}\nexport function toLower(value) {\n  if (isString(value)) {\n    return value.toLowerCase();\n  }\n  return value;\n}\nexport function convertType(value) {\n  if (isNumber(value)) {\n    return value.toString();\n  }\n  if (isDateString(value)) {\n    return convertDateString(value);\n  }\n  if (isBoolean(value)) {\n    return value ? '1' : '-1';\n  }\n  return value;\n}\nexport function filterRows(rows, filters) {\n  if (isEmpty(filters)) return rows;\n  return rows.filter(row => {\n    return Object.keys(filters).every(accessor => {\n      const value = row[accessor];\n      const searchValue = filters[accessor];\n      if (isString(value)) {\n        return toLower(value).includes(toLower(searchValue));\n      }\n      if (isBoolean(value)) {\n        return searchValue === 'true' && value || searchValue === 'false' && !value;\n      }\n      if (isNumber(value)) {\n        return value == searchValue;\n      }\n      return false;\n    });\n  });\n}\nexport function sortRows(rows, sort) {\n  return rows.sort((a, b) => {\n    const {\n      order,\n      orderBy\n    } = sort;\n    if (isNil(a[orderBy])) return 1;\n    if (isNil(b[orderBy])) return -1;\n    const aLocale = convertType(a[orderBy]);\n    const bLocale = convertType(b[orderBy]);\n    if (order === 'asc') {\n      return aLocale.localeCompare(bLocale, 'en', {\n        numeric: isNumber(b[orderBy])\n      });\n    } else {\n      return bLocale.localeCompare(aLocale, 'en', {\n        numeric: isNumber(a[orderBy])\n      });\n    }\n  });\n}\nexport function paginateRows(sortedRows, activePage, rowsPerPage) {\n  return [...sortedRows].slice((activePage - 1) * rowsPerPage, activePage * rowsPerPage);\n}\nexport const Pagination = _ref => {\n  let {\n    activePage,\n    count,\n    rowsPerPage,\n    totalPages,\n    setActivePage\n  } = _ref;\n  const beginning = activePage === 1 ? 1 : rowsPerPage * (activePage - 1) + 1;\n  const end = activePage === totalPages ? count : beginning + rowsPerPage - 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: activePage === 1,\n        onClick: () => setActivePage(1),\n        children: \"\\u23EE\\uFE0F First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: activePage === 1,\n        onClick: () => setActivePage(activePage - 1),\n        children: \"\\u2B05\\uFE0F Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: activePage === totalPages,\n        onClick: () => setActivePage(activePage + 1),\n        children: \"Next \\u27A1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: activePage === totalPages,\n        onClick: () => setActivePage(totalPages),\n        children: \"Last \\u23ED\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Page \", activePage, \" of \", totalPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rows: \", beginning === end ? end : `${beginning} - ${end}`, \" of \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["isEmpty","obj","arguments","length","undefined","Object","keys","isString","value","String","isNumber","isNaN","isBoolean","isNil","isDateString","match","convertDateString","substr","toLower","toLowerCase","convertType","toString","filterRows","rows","filters","filter","row","every","accessor","searchValue","includes","sortRows","sort","a","b","order","orderBy","aLocale","bLocale","localeCompare","numeric","paginateRows","sortedRows","activePage","rowsPerPage","slice","Pagination","_ref","count","totalPages","setActivePage","beginning","end","_jsxDEV","_Fragment","children","className","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/miriam/IdeaProjects/Manga/frontend/src/components/helpers.js"],"sourcesContent":["/* eslint-disable eqeqeq */\n\nexport function isEmpty(obj = {}) {\n    return Object.keys(obj).length === 0\n}\n\nexport function isString(value) {\n    return typeof value === 'string' || value instanceof String\n}\n\nexport function isNumber(value) {\n    return typeof value == 'number' && !isNaN(value)\n}\n\nexport function isBoolean(value) {\n    return value === true || value === false\n}\n\nexport function isNil(value) {\n    return typeof value === 'undefined' || value === null\n}\n\nexport function isDateString(value) {\n    if (!isString(value)) return false\n\n    return value.match(/^\\d{2}-\\d{2}-\\d{4}$/)\n}\n\nexport function convertDateString(value) {\n    return value.substr(6, 4) + value.substr(3, 2) + value.substr(0, 2)\n}\n\nexport function toLower(value) {\n    if (isString(value)) {\n        return value.toLowerCase()\n    }\n    return value\n}\n\nexport function convertType(value) {\n    if (isNumber(value)) {\n        return value.toString()\n    }\n\n    if (isDateString(value)) {\n        return convertDateString(value)\n    }\n\n    if (isBoolean(value)) {\n        return value ? '1' : '-1'\n    }\n\n    return value\n}\n\nexport function filterRows(rows, filters) {\n    if (isEmpty(filters)) return rows\n\n    return rows.filter((row) => {\n        return Object.keys(filters).every((accessor) => {\n            const value = row[accessor]\n            const searchValue = filters[accessor]\n\n            if (isString(value)) {\n                return toLower(value).includes(toLower(searchValue))\n            }\n\n            if (isBoolean(value)) {\n                return (searchValue === 'true' && value) || (searchValue === 'false' && !value)\n            }\n\n            if (isNumber(value)) {\n                return value == searchValue\n            }\n\n            return false\n        })\n    })\n}\n\nexport function sortRows(rows, sort) {\n    return rows.sort((a, b) => {\n        const { order, orderBy } = sort\n\n        if (isNil(a[orderBy])) return 1\n        if (isNil(b[orderBy])) return -1\n\n        const aLocale = convertType(a[orderBy])\n        const bLocale = convertType(b[orderBy])\n\n        if (order === 'asc') {\n            return aLocale.localeCompare(bLocale, 'en', { numeric: isNumber(b[orderBy]) })\n        } else {\n            return bLocale.localeCompare(aLocale, 'en', { numeric: isNumber(a[orderBy]) })\n        }\n    })\n}\n\nexport function paginateRows(sortedRows, activePage, rowsPerPage) {\n    return [...sortedRows].slice((activePage - 1) * rowsPerPage, activePage * rowsPerPage)\n}\n\nexport const Pagination = ({ activePage, count, rowsPerPage, totalPages, setActivePage }) => {\n    const beginning = activePage === 1 ? 1 : rowsPerPage * (activePage - 1) + 1\n    const end = activePage === totalPages ? count : beginning + rowsPerPage - 1\n\n    return (\n        <>\n            <div className=\"pagination\">\n                <button disabled={activePage === 1} onClick={() => setActivePage(1)}>\n                    ⏮️ First\n                </button>\n                <button disabled={activePage === 1} onClick={() => setActivePage(activePage - 1)}>\n                    ⬅️ Previous\n                </button>\n                <button disabled={activePage === totalPages} onClick={() => setActivePage(activePage + 1)}>\n                    Next ➡️\n                </button>\n                <button disabled={activePage === totalPages} onClick={() => setActivePage(totalPages)}>\n                    Last ⏭️\n                </button>\n            </div>\n            <p>\n                Page {activePage} of {totalPages}\n            </p>\n            <p>\n                Rows: {beginning === end ? end : `${beginning} - ${end}`} of {count}\n            </p>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}